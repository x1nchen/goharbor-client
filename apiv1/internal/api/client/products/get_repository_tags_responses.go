// Code generated by go-swagger; DO NOT EDIT.

package products

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mittwald/goharbor-client/v3/apiv1/model"
)

// GetRepositoryTagsReader is a Reader for the GetUsers structure.
type GetRepositoryTagsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRepositoryTagsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetRepositoryTagsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetRepositoryTagsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetRepositoryTagsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetRepositoryTagsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetRepositoryTagsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetRepositoryTagsOK creates a GetRepositoryTagsOK with default headers values
func NewGetRepositoryTagsOK() *GetRepositoryTagsOK {
	return &GetRepositoryTagsOK{}
}

/* GetRepositoryTagsOK describes a response with status code 200, with default header values.

Searched for users of Harbor successfully.
*/
type GetRepositoryTagsOK struct {
	Payload []*model.DetailedTag
}

func (o *GetRepositoryTagsOK) Error() string {
	return fmt.Sprintf("[GET /users][%d] getUsersOK  %+v", 200, o.Payload)
}
func (o *GetRepositoryTagsOK) GetPayload() []*model.DetailedTag {
	return o.Payload
}

func (o *GetRepositoryTagsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRepositoryTagsBadRequest creates a GetRepositoryTagsBadRequest with default headers values
func NewGetRepositoryTagsBadRequest() *GetRepositoryTagsBadRequest {
	return &GetRepositoryTagsBadRequest{}
}

/* GetRepositoryTagsBadRequest describes a response with status code 400, with default header values.

Invalid user ID.
*/
type GetRepositoryTagsBadRequest struct {
}

func (o *GetRepositoryTagsBadRequest) Error() string {
	return fmt.Sprintf("[GET /users][%d] getUsersBadRequest ", 400)
}

func (o *GetRepositoryTagsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetRepositoryTagsUnauthorized creates a GetRepositoryTagsUnauthorized with default headers values
func NewGetRepositoryTagsUnauthorized() *GetRepositoryTagsUnauthorized {
	return &GetRepositoryTagsUnauthorized{}
}

/* GetRepositoryTagsUnauthorized describes a response with status code 401, with default header values.

User need to log in first.
*/
type GetRepositoryTagsUnauthorized struct {
}

func (o *GetRepositoryTagsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /users][%d] getUsersUnauthorized ", 401)
}

func (o *GetRepositoryTagsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetRepositoryTagsForbidden creates a GetRepositoryTagsForbidden with default headers values
func NewGetRepositoryTagsForbidden() *GetRepositoryTagsForbidden {
	return &GetRepositoryTagsForbidden{}
}

/* GetRepositoryTagsForbidden describes a response with status code 403, with default header values.

User does not have permission of admin role.
*/
type GetRepositoryTagsForbidden struct {
}

func (o *GetRepositoryTagsForbidden) Error() string {
	return fmt.Sprintf("[GET /users][%d] getUsersForbidden ", 403)
}

func (o *GetRepositoryTagsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetRepositoryTagsInternalServerError creates a GetRepositoryTagsInternalServerError with default headers values
func NewGetRepositoryTagsInternalServerError() *GetRepositoryTagsInternalServerError {
	return &GetRepositoryTagsInternalServerError{}
}

/* GetRepositoryTagsInternalServerError describes a response with status code 500, with default header values.

Unexpected internal errors.
*/
type GetRepositoryTagsInternalServerError struct {
}

func (o *GetRepositoryTagsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /users][%d] getUsersInternalServerError ", 500)
}

func (o *GetRepositoryTagsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
